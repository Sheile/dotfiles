bindkey -e

# Load Plugins
source ~/.zsh/antigenrc

setopt ignore_eof
setopt interactive_comments
setopt no_beep

# cd関連
setopt autocd
setopt auto_pushd
setopt pushd_ignore_dups
alias b='cd ..'

# 補完関連
unsetopt auto_menu

fpath=(~/.zsh/completions $fpath)
autoload -Uz compinit && compinit -u
if command -v aws_completer >/dev/null 2>&1; then
  autoload bashcompinit && bashcompinit
  complete -C '/usr/bin/aws_completer' aws
fi

# Environment variables
source ~/.zsh/credentials
export TZ=Asia/Tokyo
export LANG=ja_JP.utf8
export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/lib
export LESS='-R -i -X'

export PATH=$HOME/bin:$PATH

# Append PATH to node
export NODE_PATH=/opt/node
export PATH=$PATH:$NODE_PATH/bin

# Aliases
alias irb='pry'
alias crontab='crontab -i'
alias less='less -N'
alias ls='ls --color=auto'
alias la='ls -la'
alias ll='ls -l'
alias diff='git diff --no-index'
alias grep='grep --color=auto'
alias tailf='tail -f'
alias fd='fd --hidden --no-ignore --glob'
alias sudo="sudo env PATH=$(sudo sh -c 'echo $PATH'):/opt/nvim/bin "

if command -v bat >/dev/null 2>&1; then
  alias cat='bat'
  alias less='bat'
fi

if command -v aicommits >/dev/null 2>&1; then
  alias aic='aicommits --generate 3'
fi

# show filelist when change directory.
chpwd() {
  ls -l
}

# <C-s>/<C-q>による画面更新の停止機能を無効化
stty stop undef
stty start undef

# history settings
export HISTFILE=~/.histfile
export HISTSIZE=1000000
export SAVEHIST=1000000
setopt hist_ignore_dups
setopt share_history
setopt hist_no_store
setopt hist_expand

# 入力中の内容にマッチする物のみ履歴をたどる
autoload -Uz history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end

bindkey "^P" history-beginning-search-backward-end
bindkey "^N" history-beginning-search-forward-end

# 空Enterでgit status表示
function do_enter() {
  if [ -n "$BUFFER" ]; then
    zle accept-line
    return 0
  fi
  echo

  # ls
  # ↓おすすめ
  # ls_abbrev

  if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = 'true' ]; then
      echo
      git status -sb
  fi
  zle reset-prompt
  return 0
}
zle -N do_enter
bindkey '^m' do_enter

# promptにgitのbranchとstatusを表示
GIT_PS1_SHOWCOLORHINTS=true
GIT_PS1_SHOWUPSTREAM=verbose
source ~/.zsh/git-prompt.sh
setopt PROMPT_SUBST ; PS1='[%n@%m]%~$(__git_ps1 " (%s)")%% '

# Use pyenv
if [ -f "$PYENV_ROOT/bin/pyenv" ]; then
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
fi

# Add alias for python3
python --version 2>&1 | grep "Python 2" > /dev/null
if [ $? -eq 0 ]; then
  alias python=python3
fi

# NeoVim
alias vi='nvim'
alias vim='nvim'
alias view='nvim -R'

export PATH=/opt/nvim/bin:$PATH

# Change window title
echo -e "\033];$(whoami)@$(hostname)\007"

# Save raw cmdline for tmux-resurrect
if [[ -n "$TMUX_PLUGIN_MANAGER_PATH" ]]; then
  source $TMUX_PLUGIN_MANAGER_PATH/tmux-resurrect/scripts/helpers.sh
  mkdir -p "$(resurrect_dir)"
  touch $(resurrect_dir)/tmux_resurrect_cmdline

  # Clear cmdline which was generated by old process id when reuse it
  sed -i "/^$$:/d" $(resurrect_dir)/tmux_resurrect_cmdline

  function save_raw_cmdline_for_tmux_resurrect() {
    sed -i "/^$$:/d" $(resurrect_dir)/tmux_resurrect_cmdline
    echo "$$:$1" >> $(resurrect_dir)/tmux_resurrect_cmdline
  }
  autoload -Uz add-zsh-hook
  add-zsh-hook preexec save_raw_cmdline_for_tmux_resurrect
fi
